{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","down","left","right","OppositeDirection","Delta","DirectionKeyCodeMap","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f5fa70c2.chunk.js","sourcesContent":["const Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden';\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden';\n\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1);\n\n    return (\n        <div className=\"navigation\">\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Length: </span>\n                <div className=\"navigation-item-number-container\">\n                    <div className=\"num-board\">{length}</div>\n                </div>\n            </div>\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Difficulty: </span>\n                <div className=\"navigation-item-number-container\">\n                    <span className=\"num-board\">{difficulty}</span>\n                    <div className=\"difficulty-button-container\">\n                    <div \n                            className={`difficulty-button difficulty-up ${upVisibility}`}\n                            onClick={onUpDifficulty}\n                        >\n                        </div>\n                        <div \n                            className={`difficulty-button difficulty-down ${downVisibility}`}\n                            onClick={onDownDifficulty}\n                        >\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Navigation;","const Field = ({ fields }) => {\n    return (\n        <div className=\"field\">\n            {\n                fields.map((row) => {\n                    return row.map((column) => {\n                        return <div className={`dots ${column}`}></div>\n                    });\n                })\n            }\n        </div>\n    );\n};\n\nexport default Field;","const Button = ({ status, onStart, onStop, onRestart }) => {\n    return (\n        <div className=\"button\">\n            { status === \"gameover\" && <button className=\"btn btn-gamover\" onClick={onRestart}>gameover</button>}\n            { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button>}\n            { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button>}\n            { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\n        </div>\n    );\n};\n\nexport default Button;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ManipulationPanel = ({ onChange}) => {\n    const onUp = () => onChange('up');\n    const onRight = () => onChange('right');\n    const onLeft = () => onChange('left');\n    const onDown = () => onChange('down');\n\n    return (\n        <div className=\"manipulation-panel\">\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n                <FontAwesomeIcon icon={faArrowLeft}/>\n            </button>\n            <div>\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n                    <FontAwesomeIcon icon={faArrowUp}/>    \n                </button> \n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n                    <FontAwesomeIcon icon={faArrowDown}/>    \n                </button> \n            </div>\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n                <FontAwesomeIcon icon={faArrowRight}/>\n            </button> \n        </div>\n    );\n};\n\nexport default ManipulationPanel;\n\n","export const getFoodPosition = (fieldSize, excludes) => {\n    while(true) {\n        const x = Math.floor(Math.random() * ((fieldSize -1) - 1)) + 1;\n        const y = Math.floor(Math.random() * ((fieldSize -1) - 1)) + 1;\n        const conflict = excludes.some(item => item.x === x && item.y === y);\n\n        if(!conflict) {\n            return { x, y };\n        }\n    }\n}\n  \n\nexport const initFields = (fieldSize, snake) => {\n    const fields = [];\n    for(let i = 0; i < fieldSize; i++) {\n        const cols = new Array(fieldSize).fill('');\n        fields.push(cols);\n    }\n    fields[snake.y][snake.x] = 'snake';\n\n    const food = getFoodPosition(fieldSize, [snake]);\n    fields[food.y][food.x] = 'food';\n\n    return fields;\n}","import { useEffect, useState, useCallback } from 'react';\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils';\n\nconst initialPosition = { x:17, y:17 };\nconst initialValues = initFields(35, initialPosition);\nconst defaultInterval = 100;\nconst defaultDifficulty = 3;\nconst Difficulty = [400, 200, 100, 50, 25]\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover',\n});\n\nconst Direction = Object.freeze({\n  up: 'up',\n  down: 'down',\n  left: 'left',\n  right: 'right',\n});\n\nconst OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n});\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0},\n  down: { x: 0, y: 1 }\n});\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down\n});\n\nlet timer = undefined\n\nconst unsubscribe = () => {\n  if(!timer) {\n    return;\n  }\n  clearInterval(timer);\n}\n\nconst isCollision = (fieldSize, position) => {\n  if(position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if(position.y > fieldSize - 1 || position.x > fieldSize -1) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake';\n}\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues);\n  const [body, setBody] = useState([]);\n  const [status, setStatus] = useState(GameStatus.init);\n  const [direction, setDirection] = useState(Direction.up);\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n  const [tick, setTick] = useState(0);\n\n  useEffect(() => {\n    // console.log('useEffect1');\n    setBody([initialPosition]);\n\n    // ゲームの中の時間を管理する\n    const interval = Difficulty[difficulty - 1];\n    timer = setInterval(() => {\n      setTick(tick => tick + 1);\n    }, interval);\n    return unsubscribe;\n  }, [difficulty]);\n\n  const onStart = () => setStatus(GameStatus.playing);\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval);\n    setDirection(Direction.up);\n    setStatus(GameStatus.init);\n    setBody([initialPosition]);\n    setDirection(Direction.up);\n    setFields(initFields(35, initialPosition));\n  }\n\n  const onStop = () => setStatus(GameStatus.suspended);\n\n  useEffect(() => {\n    // console.log('useEffect2');\n    if(body.length === 0 || status !== GameStatus.playing) {\n      return;\n    }\n    const canContinue = handleMoving();\n    if (!canContinue) {\n      setStatus(GameStatus.gameover);\n    }\n  }, [tick]);\n\n  const onChangeDirection = useCallback((newDirection) => {\n    // console.log('callback1');\n    if(status !== GameStatus.playing) {\n      return direction;\n    }\n    if(OppositeDirection[direction] === newDirection) {\n      return;\n    }\n    setDirection(newDirection);\n  }, [direction, status]);\n\n  useEffect(() => {\n    // console.log('useEffect3')\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [onChangeDirection]);\n\n  const handleMoving = () => {\n    const { x, y } = body[0];\n    const delta = Delta[direction];\n    const newPosition = { \n      x: x + delta.x, \n      y: y + delta.y\n    };\n    if(isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n      return false;\n    }\n    const newBody = [...body];\n    if(fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop();\n      fields[removingTrack.y][removingTrack.x] = '';\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n      fields[food.y][food.x] = 'food';\n    }\n\n    fields[newPosition.y][newPosition.x] = 'snake';\n    newBody.unshift(newPosition);\n    setBody(newBody);\n    setFields(fields);\n\n    return true;\n  }\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if(status !== GameStatus.init) {\n      return;\n    }\n    if(difficulty < 1 || difficulty > Difficulty.length) {\n      return;\n    }\n    setDifficulty(difficulty);\n  }, [status, difficulty]);\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation \n          length={body.length} \n          difficulty={difficulty} \n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button \n          status={status} \n          onStop={onStop}\n          onStart={onStart} \n          onRestart={onRestart} \n        />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}