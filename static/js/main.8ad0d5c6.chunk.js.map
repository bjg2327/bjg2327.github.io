{"version":3,"sources":["utils/index.js","constants/index.js","components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","hooks/useSnakeGame.js","App.js","reportWebVitals.js","index.js"],"names":["getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","fields","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","down","left","right","DirectionKeyCodeMap","OppositeDirection","Delta","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","timer","unsubscribe","clearInterval","useSnakeGame","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","updateDirection","useCallback","newDirection","updateDifficulty","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","delta","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","start","stop","reload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ad0d5c6.chunk.js","sourcesContent":["export const getFoodPosition = (fieldSize, excludes) => {\n    while(true) {\n        const x = Math.floor(Math.random() * ((fieldSize -1) - 1)) + 1;\n        const y = Math.floor(Math.random() * ((fieldSize -1) - 1)) + 1;\n        const conflict = excludes.some(item => item.x === x && item.y === y);\n\n        if(!conflict) {\n            return { x, y };\n        }\n    }\n}\n  \n\nexport const initFields = (fieldSize, snake) => {\n    const fields = [];\n    for(let i = 0; i < fieldSize; i++) {\n        const cols = new Array(fieldSize).fill('');\n        fields.push(cols);\n    }\n    fields[snake.y][snake.x] = 'snake';\n\n    const food = getFoodPosition(fieldSize, [snake]);\n    fields[food.y][food.x] = 'food';\n\n    return fields;\n}\n\n","import { initFields } from \"../utils\";\n\nconst fieldSize = 35;\nexport const initialPosition = { x: 17, y: 17 };\nexport const initialValues = initFields(fieldSize, initialPosition);\nexport const defaultInterval = 100;\nexport const defaultDifficulty = 3;\n\nexport const Difficulty = [400, 200, 100, 50, 25];\n\nexport const GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover',\n});\n\nexport const Direction = Object.freeze({\n  up: 'up',\n  down: 'down',\n  left: 'left',\n  right: 'right',\n});\n\nexport const DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down\n});\n\n\nexport const OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n});\n\nexport const Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 }\n});\n\nexport const isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake';\n}\n\n\n","import { defaultDifficulty, Difficulty } from \"../constants\";\n\nconst Navigation = ({ length, difficulty = defaultDifficulty, onChangeDifficulty }) => {\n    const upVisibility = difficulty < Difficulty.length ? '' : 'is-hidden';\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden';\n\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1);\n\n    return (\n        <div className=\"navigation\">\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Length: </span>\n                <div className=\"navigation-item-number-container\">\n                    <div className=\"num-board\">{length}</div>\n                </div>\n            </div>\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Difficulty: </span>\n                <div className=\"navigation-item-number-container\">\n                    <span className=\"num-board\">{difficulty}</span>\n                    <div className=\"difficulty-button-container\">\n                    <div \n                            className={`difficulty-button difficulty-up ${upVisibility}`}\n                            onClick={onUpDifficulty}\n                        >\n                        </div>\n                        <div \n                            className={`difficulty-button difficulty-down ${downVisibility}`}\n                            onClick={onDownDifficulty}\n                        >\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Navigation;","const Field = ({ fields }) => {\n    return (\n        <div className=\"field\">\n            {\n                fields.map((row) => {\n                    return row.map((column) => {\n                        return <div className={`dots ${column}`}></div>\n                    });\n                })\n            }\n        </div>\n    );\n};\n\nexport default Field;","import { GameStatus } from \"../constants\";\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n    return (\n        <div className=\"button\">\n            { status === GameStatus.gameover && <button className=\"btn btn-gamover\" onClick={onRestart}>gameover</button>}\n            { status === GameStatus.init && <button className=\"btn btn-init\" onClick={onStart}>start</button>}\n            { status === GameStatus.suspended && <button className=\"btn btn-suspended\" onClick={onStart}>start</button>}\n            { status === GameStatus.playing && <button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\n        </div>\n    );\n};\n\nexport default Button;\n","import { Direction } from '../constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ManipulationPanel = ({ onChange}) => {\n    const onUp = () => onChange(Direction.up);\n    const onRight = () => onChange(Direction.right);\n    const onLeft = () => onChange(Direction.left);\n    const onDown = () => onChange(Direction.down);\n\n    return (\n        <div className=\"manipulation-panel\">\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n                <FontAwesomeIcon icon={faArrowLeft}/>\n            </button>\n            <div>\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n                    <FontAwesomeIcon icon={faArrowUp}/>    \n                </button> \n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n                    <FontAwesomeIcon icon={faArrowDown}/>    \n                </button> \n            </div>\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n                <FontAwesomeIcon icon={faArrowRight}/>\n            </button> \n        </div>\n    );\n};\n\nexport default ManipulationPanel;\n\n","import { useCallback, useEffect, useState } from 'react';\nimport {\n  defaultInterval,\n  defaultDifficulty,\n  Delta,\n  Difficulty,\n  Direction,\n  DirectionKeyCodeMap,\n  GameStatus,\n  OppositeDirection,\n  initialPosition,\n  initialValues,\n  isCollision,\n  isEatingMyself,\n} from '../constants';\nimport {\n  initFields,\n  getFoodPosition,\n} from '../utils';\n\nlet timer = null;\n\nconst unsubscribe = () => {\n  if (!timer) {\n    return;\n  }\n  clearInterval(timer);\n};\n\nconst useSnakeGame = () => {\n  const [fields, setFields] = useState(initialValues);\n  const [body, setBody] = useState([]);\n  const [status, setStatus] = useState(GameStatus.init);\n  const [direction, setDirection] = useState(Direction.up);\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n  const [tick, setTick] = useState(0);\n\n  useEffect(() => {\n    setBody([initialPosition]);\n\n    // ゲームの中の時間を管理する\n    const interval = Difficulty[difficulty - 1];\n    timer = setInterval(() => {\n      setTick(tick => tick + 1);\n    }, interval);\n    return unsubscribe;\n  }, [difficulty]);\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return;\n    }\n    const canContinue = handleMoving();\n    if (!canContinue) {\n      unsubscribe();\n      setStatus(GameStatus.gameover);\n    }\n  }, [tick]);\n\n  const start = () => setStatus(GameStatus.playing);\n\n  const stop = () => setStatus(GameStatus.suspended);\n\n  const reload = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval);\n    setStatus(GameStatus.init);\n    setBody([initialPosition]);\n    setDirection(Direction.up);\n    setFields(initFields(fields.length, initialPosition));\n  }\n\n  const updateDirection = useCallback(\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return;\n      }\n      if (OppositeDirection[direction] === newDirection) {\n        return;\n      }\n      setDirection(newDirection);\n    },\n    [direction, status]\n  );\n\n  const updateDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        return;\n      }\n      if (difficulty < 1 || difficulty > Difficulty.length) {\n        return;\n      }\n      setDifficulty(difficulty);\n    },\n    [status]\n  );\n\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n      updateDirection(newDirection);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [updateDirection]);\n\n  const handleMoving = () => {\n    const { x, y } = body[0];\n    const delta = Delta[direction];\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    };\n    if (\n      isCollision(fields.length, newPosition) ||\n      isEatingMyself(fields, newPosition)\n    ) {\n      return false;\n    }\n    const newBody = [...body];\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop();\n      fields[removingTrack.y][removingTrack.x] = '';\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n      fields[food.y][food.x] = 'food';\n    }\n\n    fields[newPosition.y][newPosition.x] = 'snake';\n    newBody.unshift(newPosition);\n\n    setBody(newBody);\n    setFields(fields);\n\n    return true;\n  }\n  return {\n    body,\n    difficulty,\n    fields,\n    status,\n    start,\n    stop,\n    reload,\n    updateDirection,\n    updateDifficulty,\n  };\n}\nexport default useSnakeGame;","import Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport useSnakeGame from './hooks/useSnakeGame';\n\nfunction App() {\n  const {\n    body,\n    difficulty,\n    fields,\n    start,\n    stop,\n    reload,\n    status,\n    updateDirection,\n    updateDifficulty,\n  } = useSnakeGame();\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={updateDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop={stop}\n          onStart={start}\n          onRestart={reload}\n        />\n        <ManipulationPanel onChange={updateDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}